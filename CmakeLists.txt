cmake_minimum_required(VERSION 3.13)

# initialize the SDK based on PICO_SDK_PATH
# note: this must happen before project()
include(pico_sdk_import.cmake)

set(PROJECT_NAME "hello_world")
set(PICO_BOARD "pico_w")

project(${PROJECT_NAME})

# initialize the Raspberry Pi Pico SDK
pico_sdk_init()

# rest of your project
add_executable(${PROJECT_NAME}
    ${PROJECT_NAME}.c
)

# Add pico_stdlib library which aggregates commonly used features
target_link_libraries(${PROJECT_NAME} pico_stdlib)

# enable usb output, disable uart output
pico_enable_stdio_usb(${PROJECT_NAME} 1)
pico_enable_stdio_uart(${PROJECT_NAME} 0)

# create map/bin/hex/uf2 file in addition to ELF.
pico_add_extra_outputs(${PROJECT_NAME})

add_custom_target(flash
    COMMAND picotool help
#    COMMAND picotool load -F ${PROJECT_NAME}.uf2 && picotool reboot
#    DEPENDS ${PROJECT_NAME}
#    COMMENT "Flashing ${PROJECT_NAME}.uf2"
)